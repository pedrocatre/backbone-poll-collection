/*! backbone-polling - v1.0.0 - 2014-01-14
* https://github.com/pedrocatre/backbone-polling
* Copyright (c) 2014 Pedro Catr√©; Licensed MIT */
!function(a,b){"use strict";"function"==typeof define&&define.amd?define(["underscore","jquery"],b):a.BackbonePolling=b(a._,a.jQuery)}(this,function(a,b){"use strict";return{doFetchRequest:!1,configure:function(a){this._backbonePollSettings=b.extend(!0,{},this._backbonePollSettings,a)},_backbonePollSettings:{refresh:1e3,fetchOptions:{},retryRequestOnFetchFail:!0},startFetching:function(){return this.doFetchRequest=!0,this._refresh(1),this},_refresh:function(b){return this._timeoutId=setTimeout(a.bind(function(){clearTimeout(this._timeoutId),this.doFetchRequest&&(this.fetchRequest=this.fetch(this._backbonePollSettings.fetchOptions),this.fetchRequest.done(a.bind(function(){this.trigger("refresh:done"),this._refresh(this._backbonePollSettings.refresh)},this)).fail(a.bind(function(){this.trigger("refresh:fail"),this._backbonePollSettings.retryRequestOnFetchFail?this._refresh(this._backbonePollSettings.refresh):this.stopFetching()},this)).always(a.bind(function(){this.trigger("refresh:always")},this)))},this),b),this},abortPendingFetchRequests:function(){return a.isUndefined(this.fetchRequest)||a.isUndefined(this.fetchRequest.abort)||this.fetchRequest.abort(),this},isFetching:function(){return!a.isUndefined(this._timeoutId)},stopFetching:function(){return this.doFetchRequest=!1,this.isFetching()&&(clearTimeout(this._timeoutId),this._timeoutId=void 0),this.abortPendingFetchRequests(),this}}});